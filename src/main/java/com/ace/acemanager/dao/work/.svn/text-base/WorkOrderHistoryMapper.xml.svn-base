<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ace.acemanager.dao.work.WorkOrderHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.ace.acemanager.pojo.WorkOrderHistory" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_property" property="orderProperty" jdbcType="VARCHAR" />
    <result column="order_before" property="orderBefore" jdbcType="VARCHAR" />
    <result column="order_after" property="orderAfter" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    	<association property="historyUser" javaType="com.ace.acemanager.pojo.User">
		<result column="name" property="name" />
	</association>
  </resultMap>
  <sql id="Base_Column_List">
    h.id, h.order_id, h.order_property, h.order_before, h.order_after, h.update_time,u.name
  </sql>
  <insert id="insertWorkOrderHistroy" parameterType="com.ace.acemanager.pojo.WorkOrderHistory" >
     insert into work_order_history (id, order_id, user_id,order_property, 
      order_before, order_after, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER}, #{orderProperty,jdbcType=VARCHAR}, 
      #{orderBefore,jdbcType=VARCHAR}, #{orderAfter,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <delete id="deleteDealHistory" parameterType="java.lang.Integer">
  DELETE  FROM work_order_history  WHERE  `order_id`=#{id,jdbcType=INTEGER} 
  AND `order_property` NOT IN('status','next','create')
  </delete>
  <delete id="deleteHistory" parameterType="java.lang.Integer">
	  DELETE  FROM work_order_history  WHERE  `order_id`=#{id,jdbcType=INTEGER}   	
  </delete>
   <select id="listOrderHistory"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
   SELECT 
 <include refid="Base_Column_List" />
FROM
  work_order_history h 
  LEFT JOIN auth_user u 
    ON h.`user_id` = u.`id`
    where h.order_id = #{id,jdbcType=INTEGER}
    ORDER BY h.`update_time` DESC
   </select>
</mapper>